#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

# 1. Implements Hartmann 3-dimensional Function
# ------------------------------------------------------------
# Reference: https://www.sfu.ca/~ssurjano/hart3.html
#
# Description: The 3-dimensional Hartmann function has 4 local minima. 
# 
# Dimensions: 3
#
# Input Domain:
# The function is usually evaluated on the hypercube xi ∈ [0, 1], for all i = 1, 2, 3.
#
# Global Minimum:
# f(X') = -3.86278, at X' = (0.114614, 0.555649, 0.852547).
#
# -------------------------------------------------------------
# 

Hartmann_3 = function( matrix[double] X) 
  return (double out) {
  
  /*
   * INPUT:
   * X -> input matrix 1 x 3 (3 dimensions)
   *
   * OUTPUT:
   * out -> function value, a scalar
   */
  
  A = [ 3.0, 10, 30,
        0.1, 10, 35,
        3.0, 10, 30,
        0.1, 10, 35 ];
        
  P = [ 0.3689, 0.1170, 0.2673, 
        0.4699, 0.4387, 0.7470,
        0.1091, 0.8732, 0.5547,
        0.0381, 0.5743, 0.8828 ];
        
  alpha = t( [1.0, 1.2, 3.0, 3.2] );
  
  temp1 = rowsums( A[, 1:3] %*% (X - P[, 1:3])^2 );
  
  out = sum( alpha * exp( - temp1 ) );
  
}


# 2. Implements Hartmann 4-dimensional Function
# ------------------------------------------------------------
# Reference: https://www.sfu.ca/~ssurjano/hart4.html
#
# Description: The 4-dimensional Hartmann function is multimodal. 
# with a mean of zero and a variance of one.
# 
# Dimensions: 4
#
# Input Domain:
# The function is usually evaluated on the hypercube xi ∈ [0, 1], for all i = 1, 2, 3.
#
# Global Minimum:
# No information is available.
#
# -------------------------------------------------------------
# 

Hartmann_4 = function( matrix[double] X) 
  return (double out) {
  
  /*
   * INPUT:
   * X -> input matrix 1 x 3 (3 dimensions)
   *
   * OUTPUT:
   * out -> function value, a scalar
   */
  
  A = [   10,   3,   17, 3.50, 1.7,  8,
        0.05,  10,   17,  0.1,   8, 14,
           3, 3.5,  1.7,   10,  17,  8,
          17,   8, 0.05,   10, 0.1, 14 ];
        
  P = [ 0.1312, 0.1696, 0.5569, 0.0124, 0.8283, 0.5886,
        0.2329, 0.4135, 0.8307, 0.3736, 0.1004, 0.9991,
        0.2348, 0.1451, 0.3522, 0.2883, 0.3047, 0.6650,
        0.4047, 0.8828, 0.8732, 0.5743, 0.1091, 0.0381 ];
        
  alpha = t( [1.0, 1.2, 3.0, 3.2] );
  
  temp1 = rowsums( A[, 1:4] %*% (X - P[, 1:4])^2 ); # there are four rows!
    
  out = ( 1/0.839 ) *
        [1.1 - sum( alpha * exp( - temp1 ) )];
        
}








