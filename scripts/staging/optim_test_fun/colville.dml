#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

# 1. Implements Colville (or Wood's) Function
# ------------------------------------------------------------
# Reference: https://www.sfu.ca/~ssurjano/colville.html
#
# Description:  Continuous, Differentiable, Non-Separable, Non-Scalable, Multimodal 
# 
#
# Input Domain:
# The function is usually evaluated on the hypercube xi âˆˆ [-10, 10], for all i = 1, 2, 3, 4.
#
# Global Minimum:
# f(X') = 0, at X' = (1, 1, 1, 1).
#
# -------------------------------------------------------------
# 

colville = function (matrix[double] X) 
  return (double out) {
  
  /*
   * INPUT:
   * X -> input matrix 1 x 4 (4 dimensions)
   * x1, x2, x3, x4 -> input values for 4 dimensions
   *
   * OUTPUT:
   * out -> function value, a scalar
   */
  
  x1 = X[, 1];
  x2 = X[, 2];
  x3 = X[, 3];
  x4 = X[, 4];
  
  out = 100 * (x1 ^2 - x2)^2 +
        (x1 - 1)^2 +
        (x3 - 1)^2 +
        90 * (x3 ^2 - x4)^2 +
        10.1 * ( (x2 - 1)^2 + (x4 - 1)^2 ) +
        19.8 * (x2 - 1) * (x4 - 1);
}
