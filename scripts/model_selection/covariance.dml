#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------


/*
 * Covariance Kernels
 */

covConstant = function()
  return(/*matrix[double] out*/) {

  # constant covariance function, which is only stationary
  s0 = 0.2;
  out = as.matrix(s0^2);

 for(i in 1:ncol(out)) {
   for(j in 1:nrow(out)) {
     print( i + j + " " + as.scalar(out[i,j]));
   }
 }

}

covI = function(/* matrix[double] X, matrix[double] theta */)
  return(/*matrix[double] K, matrix[double] dK*/) {

  K = diag( matrix(1, rows=4, cols=1) );

  out = K;

  for(i in 1:ncol(K)){
    for(j in 1:nrow(K)){
      obj = as.scalar(K[j, i])
      if(obj != -1)
        print( i + "," + j + obj)
    }
  }


  dK = diag( matrix(0, rows=4, cols=1) );

}


tmpx = covI()
tmpy = covConstant()
